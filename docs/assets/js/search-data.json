{"0": {
    "doc": "About",
    "title": "About",
    "content": "This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at jekyllrb.com . You can find the source code for Minima at GitHub: jekyll / minima . You can find the source code for Jekyll at GitHub: jekyll / jekyll . ",
    "url": "/control_notes/about/",
    
    "relUrl": "/about/"
  },"1": {
    "doc": "Compensators",
    "title": "Lead, Lag, and Lead-Lag Compensators",
    "content": " ",
    "url": "/control_notes/notes/compensators.html#lead-lag-and-lead-lag-compensators",
    
    "relUrl": "/notes/compensators.html#lead-lag-and-lead-lag-compensators"
  },"2": {
    "doc": "Compensators",
    "title": "Phase Margin",
    "content": "Definition . phase margin is a measure of stability for a feedback control system. It represents the amount of phase shift, expressed in degrees, that can be added to the open-loop transfer function before the system reaches the point of instability, specifically where the Bode plot crosses the -180¬∞ line at the gain crossover frequency. Phase Margin Calculation: . \\[\\text{Phase Margin} = 180^\\circ + \\angle G(j\\omega_{gc})H(j\\omega_{gc})\\] . | \\(\\omega_{gc}\\) is the gain crossover frequency ‚Äî the frequency at which the magnitude of the open-loop transfer function \\(|G(j\\omega)H(j\\omega)| = 1\\) (i.e., 0 dB). | \\(\\angle G(j\\omega)H(j\\omega)\\) is the phase of the open-loop transfer function at that frequency. | . ",
    "url": "/control_notes/notes/compensators.html#phase-margin",
    
    "relUrl": "/notes/compensators.html#phase-margin"
  },"3": {
    "doc": "Compensators",
    "title": "Phase Lead and Lag",
    "content": "A zero (s) adds phase while pole (1/s) subtracts phase. phase lead compensators add positive phase to the output, so the output leads the input. phase lag compensators add negative phase to the output, so the output lags behind the input. Phase Lead . Example: Differentiator . input: sin(t) output: cos(t) . cosine is leading sine by 90 degrees -&gt; phase lead . A differentiator circuit introduces a positive phase shift of 90 degrees . Phase Lag . ",
    "url": "/control_notes/notes/compensators.html#phase-lead-and-lag",
    
    "relUrl": "/notes/compensators.html#phase-lead-and-lag"
  },"4": {
    "doc": "Compensators",
    "title": "Compensators",
    "content": " ",
    "url": "/control_notes/notes/compensators.html",
    
    "relUrl": "/notes/compensators.html"
  },"5": {
    "doc": "Controllability",
    "title": "Equivalence",
    "content": ". | System is controllable | Arbitrary Eigenvalue (Pole) placement is allowed . | \\[u = -Kx =&gt; \\dot{x} = (A-BK)x\\] | . | Reachability (full in R^{n}) . | Theorectically one can drive from Massachusetts to California in a second | This can be proven by Cayley-Hamilton theorem | . | . ",
    "url": "/control_notes/notes/controllability.html#equivalence",
    
    "relUrl": "/notes/controllability.html#equivalence"
  },"6": {
    "doc": "Controllability",
    "title": "Cayley-Hamilton Theorem",
    "content": "Almost every square matrix satisfies its own characteristic equation . The characteristic polynomial of matrix \\(A\\) is defined as: \\(p_A(\\lambda) = \\det(\\lambda I_n - A)\\) Since this is a degree-\\(n\\) monic polynomial, it can be written as: \\(p_A(\\lambda) = \\lambda^n + c_{n-1} \\lambda^{n-1} + \\cdots + c_1 \\lambda + c_0\\) By replacing the scalar variable \\(\\lambda\\) with the matrix \\(A\\), we define the matrix polynomial: \\(p_A(A) = A^n + c_{n-1} A^{n-1} + \\cdots + c_1 A + c_0 I_n\\) . ",
    "url": "/control_notes/notes/controllability.html#cayley-hamilton-theorem",
    
    "relUrl": "/notes/controllability.html#cayley-hamilton-theorem"
  },"7": {
    "doc": "Controllability",
    "title": "Controllability",
    "content": " ",
    "url": "/control_notes/notes/controllability.html",
    
    "relUrl": "/notes/controllability.html"
  },"8": {
    "doc": "Controllability",
    "title": "Stabilizability",
    "content": "Controllability for a large dimension space maybe too extreme and sometimes unrealistic. For this purpose, Stabilizability is defined as . Stabilizability A system is stabilizable if and only if all unstable (or lightly damped) eigenvectors of A are in controlable subspace. (Anything unstable can be damped) . Actuator B should be designed so that the unstable dynamic direcitons correspond to the big singular vector of the controlability matrix. Examples of Stabilizability . | Inverted Pendulum on a cart . | Unstable Mode the pendulum tiipping over (angle grows exponentially). | Why Stabilizable: . | The cart can move left or right, providing a restoring torque - can be damped. | . | . | Rocket During Takeoff . | Unstable Mode: pitch/roll drift - if thrust isn‚Äôt perfectly aligned, rocket tips and diverges. | Why Stabilizable: . | Thrust vector control changes the direction of the force relative to the center of mass. This gives direct control authority over the unstable angular dynamics. | . | . | Drone in hover (quadcoptor) . | Unstable Mode: attitude - if it tilts slightly, gravity pulls it further, the drone accelerates away. | Why stabilizable . | Each rotor produces torque about pitch, roll, and yaw. | These torques directly act on the unstable angular states. | Feedback (from IMU + controllers) lets you push those unstable poles into the stable LHP | . | . | . ",
    "url": "/control_notes/notes/controllability.html#stabilizability",
    
    "relUrl": "/notes/controllability.html#stabilizability"
  },"9": {
    "doc": "Controllability",
    "title": "Controllability of Linear system",
    "content": "\\(\\dot{x}=Ax+Bu\\) \\(y=Cx\\) This system is controllable if and only if the controllability matrix \\(C=[B\\ AB\\ A^2B\\ ...\\ A^{n-1}B]\\) is of full column rank . Note This is a binary check. To see how controllable this system is, investigate the SVD of C. ",
    "url": "/control_notes/notes/controllability.html#controllability-of-linear-system",
    
    "relUrl": "/notes/controllability.html#controllability-of-linear-system"
  },"10": {
    "doc": "Controllability",
    "title": "Degrees of Controllability",
    "content": "The Singular Value Decomposition (SVD) of the controllability matrix provides deep insight into the degree and direction of controllability of a linear system: . | Controllability Rank If ùê∂ has full rank (i.e. rank = number of states ùëõ), the system is completely controllable. The number of nonzero singular values = the rank of ùê∂. | Strength of Controllability (Conditioning) The magnitude of the singular values tells you how ‚Äústrongly‚Äù controllable the system is in different directions: . Large singular values ‚Üí easy to move the system in that direction. Tiny singular values ‚Üí very difficult to control (require large input energy). Zero singular values ‚Üí system not controllable in that direction. | Controllable Directions The right singular vectors V from \\(ùê∂ = ùëàŒ£ùëâ^ùëá\\) span the input space. The left singular vectors ùëà represent orthogonal directions in the state space. Directions associated with large singular values in ùëà are the most controllable. | . ",
    "url": "/control_notes/notes/controllability.html#degrees-of-controllability",
    
    "relUrl": "/notes/controllability.html#degrees-of-controllability"
  },"11": {
    "doc": "Controllability",
    "title": "Controllability Gramian",
    "content": "The eigenvectors of the Gramian (\\(W_t\\)) that correspond to the biggest eigenvalues are the most controllable directions in state space. This is the same as the first column vector of the U matrix of the SVD of controllability matrix . \\(W_{t} \\approx CC^T\\) The determinant of the Gramian indicates the volume of the ellipsoid and the signal to noise ratio . The controllability Gramian is a matrix that quantifies how easily a system‚Äôs state can be driven by the input. It measures the energy required to move the system from the origin to a particular state. üîß System Setup . For a linear time-invariant (LTI) system: . \\[\\dot{x}(t) = A x(t) + B u(t)\\] The finite-horizon controllability Gramian over the time interval \\([0, T]\\) is: . \\[W_c(T) = \\int_0^T e^{A\\tau} B B^\\top e^{A^\\top \\tau} \\, d\\tau\\] If (A) is stable and \\(T \\to \\infty\\), the infinite-horizon controllability Gramian is: . \\[W_c = \\int_0^\\infty e^{A\\tau} B B^\\top e^{A^\\top \\tau} \\, d\\tau\\] . üìå What the Gramian Tells You . ‚úÖ 1. Controllability Test . | The system is controllable if and only if \\(W_c\\) is positive definite. | If \\(W_c\\) is singular (has zero eigenvalues), some states cannot be reached from the origin. | . ‚ö° 2. Energy to Reach a State . The minimum energy to reach a state ( x_f ) from the origin is: . \\[E = x_f^\\top W_c^{-1} x_f\\] States in directions with small eigenvalues of (W_c) require more energy to reach. üìê 3. Geometric Interpretation . The ellipsoid: . \\[\\left\\{ x \\in \\mathbb{R}^n : x^\\top W_c^{-1} x \\leq 1 \\right\\}\\] describes the set of states reachable with unit energy. This is known as the reachable ellipsoid. üéØ 4. Mode-wise Controllability . If \\(W_c\\) has a mix of large and small eigenvalues, then some state directions are harder to control than others. Notes . | The controllability Gramian is only defined for linear systems and often assumes zero initial state. | The controllability Gramian is symmetric and positive semi-definite | . ",
    "url": "/control_notes/notes/controllability.html#controllability-gramian",
    
    "relUrl": "/notes/controllability.html#controllability-gramian"
  },"12": {
    "doc": "Controllability",
    "title": "PBH Test",
    "content": "(A,B) is controllable if and only if \\(rank[(A-\\lambda I)\\ B] = n \\forall \\lambda \\in \\mathbb{C}\\) . | \\(rank(A-\\lambda I)=n\\) except for eigenvalues \\(\\lambda\\) | B needs to have some component in each eigenvector directions | (Advanced) a random vector B would make (A,B) controllably with high probability | . ",
    "url": "/control_notes/notes/controllability.html#pbh-test",
    
    "relUrl": "/notes/controllability.html#pbh-test"
  },"13": {
    "doc": "Controllability",
    "title": "Reachability",
    "content": "In control theory, reachability describes whether it is possible to move a system from an initial state to a desired final state using admissible control inputs over a finite time interval. For a continuous-time linear time-invariant (LTI) system described by: . \\[\\dot{x}(t) = A x(t) + B u(t)\\] where: . | \\(x(t) \\in \\mathbb{R}^n\\) is the state vector, | \\(u(t) \\in \\mathbb{R}^m\\) is the control input, | \\(A \\in \\mathbb{R}^{n \\times n}\\) is the system matrix, | \\(B \\in \\mathbb{R}^{n \\times m}\\) is the input matrix, | . the system is reachable if, for any initial state \\(x(0)\\) and any final state \\(x_f\\), there exists an input \\(u(t)\\) that drives the system from \\(x(0)\\) to \\(x_f\\) in finite time. Reachability Matrix . The reachability of the system can be tested using the reachability matrix: . \\[\\mathcal{R} = \\begin{bmatrix} B &amp; AB &amp; A^2B &amp; \\cdots &amp; A^{n-1}B \\end{bmatrix}\\] If \\(\\mathcal{R}\\) has full rank (i.e., \\(\\text{rank}(\\mathcal{R}) = n\\)), then the system is reachable . üéØ Reachability Set . The reachability set (or reachable set) at time \\(t_f\\) is the set of all states that the system can reach from an initial state \\(x(0)\\) under some admissible input \\(u(t)\\) over the time interval \\([0, t_f]\\). Formally, for a continuous-time LTI system: . \\[\\dot{x}(t) = A x(t) + B u(t), \\quad x(0) = 0\\] the reachability set at time \\(t_f\\) is defined as: . \\[\\mathcal{R}(t_f) = \\left\\{ x(t_f) \\in \\mathbb{R}^n \\;\\middle|\\; x(t_f) = \\int_0^{t_f} e^{A(t_f - \\tau)} B u(\\tau) \\, d\\tau,\\; u(\\cdot) \\in \\mathcal{L}^2[0, t_f] \\right\\}\\] This set contains all possible states the system can reach at time \\(t_f\\) from the origin with square-integrable inputs \\(u(t)\\). If \\(\\mathcal{R}(t_f)\\) spans \\(\\mathbb{R}^n\\) for some finite \\(t_f\\), the system is reachable. For discrete-time systems: . \\[x[k+1] = A x[k] + B u[k], \\quad x[0] = 0\\] the reachability set after \\(N\\) steps is: . \\[\\mathcal{R}_d(N) = \\left\\{ x[N] = \\sum_{i=0}^{N-1} A^i B u[N-1-i] \\;\\middle|\\; u[i] \\in \\mathbb{R}^m \\right\\}\\] The union of all such sets over all \\(t_f\\) (or \\(N\\) in discrete time) is the total reachable set from the origin. ",
    "url": "/control_notes/notes/controllability.html#reachability",
    
    "relUrl": "/notes/controllability.html#reachability"
  },"14": {
    "doc": "Discrete-Time Control",
    "title": "Discrete-Time Control",
    "content": " ",
    "url": "/control_notes/notes/discrete-control.html",
    
    "relUrl": "/notes/discrete-control.html"
  },"15": {
    "doc": "Discrete-Time Control",
    "title": "Continuous vs Discrete Time domain (Analog vs Digital)",
    "content": ". | Quatization Error would be introduced and can be minimized. There is a trade-off between bits, measurement range and quatization error | Discrete time (digital) systems introduce delay, which introduces lag and reduces bandwidth of controller. | . ",
    "url": "/control_notes/notes/discrete-control.html#continuous-vs-discrete-time-domain-analog-vs-digital",
    
    "relUrl": "/notes/discrete-control.html#continuous-vs-discrete-time-domain-analog-vs-digital"
  },"16": {
    "doc": "Discrete-Time Control",
    "title": "Z doman and Z transform",
    "content": " ",
    "url": "/control_notes/notes/discrete-control.html#z-doman-and-z-transform",
    
    "relUrl": "/notes/discrete-control.html#z-doman-and-z-transform"
  },"17": {
    "doc": "Frequency Response and Fourier Transform",
    "title": "Frequency Response and Fourier Transform",
    "content": " ",
    "url": "/control_notes/notes/frequency-response.html",
    
    "relUrl": "/notes/frequency-response.html"
  },"18": {
    "doc": "Frequency Response and Fourier Transform",
    "title": "Quick Notes on Damping",
    "content": "Underdamped, Critically damped, and Overdamped . Underdamped: imgarinary poles . Cirtically damped: repeated poles (eigenvalues) . Overdamped: Real eigenvalues . For a standard second-order transfer function: . \\[G(s) = \\frac{\\omega_n^2}{s^2 + 2\\zeta \\omega_n s + \\omega_n^2}\\] For a standard second-order system: . \\[\\ddot{y}(t) + 2\\zeta \\omega_n \\dot{y}(t) + \\omega_n^2 y(t) = K \\omega_n^2 u(t)\\] . The standard second-order system in differential equation form is: . \\[\\ddot{y}(t) + 2\\zeta \\omega_n \\dot{y}(t) + \\omega_n^2 y(t) = K \\omega_n^2 u(t)\\] 1. Underdamped (\\(0 &lt; \\zeta &lt; 1\\)): . \\[y(t) = e^{-\\zeta \\omega_n t} \\left[ A \\cos\\left( \\omega_n \\sqrt{1 - \\zeta^2} \\, t \\right) + B \\sin\\left( \\omega_n \\sqrt{1 - \\zeta^2} \\, t \\right) \\right]\\] Critically damped (\\(\\zeta = 1\\)): . \\[y(t) = \\left( A + Bt \\right) e^{-\\omega_n t}\\] Overdamped (\\(\\zeta &gt; 1\\)): . Let: \\(r_{1,2} = -\\omega_n \\left( \\zeta \\pm \\sqrt{\\zeta^2 - 1} \\right)\\) . Then: \\(y(t) = A e^{r_1 t} + B e^{r_2 t}\\) . Damping in higher order systems . Damping behavior is only defined for second order systems. Dominant poles are investigated for general behavior for higher-order systems. Damping and Bode plot . A peak in the frequency response (magnitude plot) happens when the system has complex conjugate poles that are lightly damped. ",
    "url": "/control_notes/notes/frequency-response.html#quick-notes-on-damping",
    
    "relUrl": "/notes/frequency-response.html#quick-notes-on-damping"
  },"19": {
    "doc": "Frequency Response and Fourier Transform",
    "title": "Fourier and Laplace Transforms",
    "content": "Note: In Laplace domain, \\(s=\\sigma + j\\omega\\). When evaluating Laplace Transform at \\(s=j\\omega\\), Laplace Transform becomes Fourier Transform. when you go from the Laplace transform \\(F(s)\\) to the Fourier transform \\(F(j\\omega)\\), you‚Äôre essentially looking at the steady-state sinusoidal response of the system. Laplace Transform . \\(\\mathcal{L}\\{f(t)\\} = F(s) = \\int_0^{\\infty} e^{-st} f(t) \\, dt\\) . Laplace Tranform is a generialized form of Fourier Transform. Specifically, Fourier Transform evaluates Laplace Transform at \\(i\\omega\\), with no real parts, ie. Fourier Transform only evaluates purely imaginary arguments for Laplace Transform. Inpoulse response h(t) given \\(u = \\delta(t)\\) is \\(L^{-1}{G(s), where Y(s) = G(s)X(s)}\\) ie the inverse Laplace Transform of the Transfer function (G(s)) . Fourier Series . If \\(f(t)\\) is a periodic function with period $T$, its Fourier series representation is: . \\[f(t) = a_0 + \\sum_{n=1}^{\\infty} \\left[ a_n \\cos\\left(\\frac{2\\pi n t}{T}\\right) + b_n \\sin\\left(\\frac{2\\pi n t}{T}\\right) \\right]\\] The coefficients are given by: . \\[a_0 = \\frac{1}{T} \\int_{-T/2}^{T/2} f(t) \\, dt\\] \\[a_n = \\frac{2}{T} \\int_{-T/2}^{T/2} f(t) \\cos\\left(\\frac{2\\pi n t}{T}\\right) dt\\] \\[b_n = \\frac{2}{T} \\int_{-T/2}^{T/2} f(t) \\sin\\left(\\frac{2\\pi n t}{T}\\right) dt\\] You can also write the Fourier series using complex exponentials: . \\[f(t) = \\sum_{n=-\\infty}^{\\infty} c_n e^{i 2\\pi n t / T}\\] with coefficients: . \\[c_n = \\frac{1}{T} \\int_{-T/2}^{T/2} f(t) e^{-i 2\\pi n t / T} dt\\] . Fourier Transform . For non-periodic functions, the Fourier Transform is used. The continuous-time Fourier transform (CTFT) of a function $f(t)$ is: . \\[F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-i \\omega t} dt\\] The inverse Fourier transform is: . \\[f(t) = \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty} F(\\omega) e^{i \\omega t} d\\omega\\] Alternatively, in terms of frequency \\(f\\) (Hz) instead of angular frequency $\\omega = 2\\pi f$: . \\[F(f) = \\int_{-\\infty}^{\\infty} f(t) e^{-i 2\\pi f t} dt\\] \\[f(t) = \\int_{-\\infty}^{\\infty} F(f) e^{i 2\\pi f t} df\\] Intuition Fourier Transform converts a time-domain \\(\\bar{x}(t)\\) to frequency domain \\(X(f)\\). This investigates how much of this specific frequency exists in the signal. Fourier Transform returns a complex number. | The magnitude of this number denotes how strong that frequency is in the signal | The angle of the complex number signifies the phase offset of that frequency - i.e., where that sine wave starts relative to time zero. | . ",
    "url": "/control_notes/notes/frequency-response.html#fourier-and-laplace-transforms",
    
    "relUrl": "/notes/frequency-response.html#fourier-and-laplace-transforms"
  },"20": {
    "doc": "Frequency Response and Fourier Transform",
    "title": "Non-minimum Phase",
    "content": "Motivation: For the same magnitude gain plot, phase plots can be drastically different. This is due to the fact that multiple transfer functions can produce the same magnitude gain plot, but have different phase profiles. Note: Non-miminum phase can be primarily caused by three phenomena: 1. Time delay \\(e^{-sT}\\) 2. RHP zeroes 3. Non-causal/Inverse-unstable Dynamics (Non-causal systems depend on input in the future) . Inverse-unstable systems (RHP in zero -&gt; inverse system has RHP pole (unstable inverse)) . Green curve is for time delay, and red curve is for RHP zero. ",
    "url": "/control_notes/notes/frequency-response.html#non-minimum-phase",
    
    "relUrl": "/notes/frequency-response.html#non-minimum-phase"
  },"21": {
    "doc": "Frequency Response and Fourier Transform",
    "title": "Bode and Nyquist Plots",
    "content": "Frequency Response . \\(frac{\\bar{x}}{\\bar{u}}\\) Notes: . | The bode plots are plotted in log scale. A small bump in Gain plot corresponds to huge response at resonate frequency. | At extremely low frequency, this system displays no gain at all hence Gain = 0 for low frequencies. At high frequencies, the sytems doesn‚Äôt have the capacity to respond in times hence the gain drops asymptotically to zero or $-\\infty$ in log scale. | . ",
    "url": "/control_notes/notes/frequency-response.html#bode-and-nyquist-plots",
    
    "relUrl": "/notes/frequency-response.html#bode-and-nyquist-plots"
  },"22": {
    "doc": "Nichols Chart, Nyquist Plot, Bode Plot, and Root Locus Plot",
    "title": "Nichols Chart, Nyquist Plot, and Bode Plot",
    "content": ". All three plots display 3 Key information about the system: 1. Gain 2. Phase 3. Frequency . ",
    "url": "/control_notes/notes/important_plots.html#nichols-chart-nyquist-plot-and-bode-plot",
    
    "relUrl": "/notes/important_plots.html#nichols-chart-nyquist-plot-and-bode-plot"
  },"23": {
    "doc": "Nichols Chart, Nyquist Plot, Bode Plot, and Root Locus Plot",
    "title": "Which to Use? A comparison",
    "content": "All three display the same information just in different ways Bode Plot is useful for Loop shaping Nyquist Plot and Nichols Plot are useful for general sensitivity and stability analysis. ",
    "url": "/control_notes/notes/important_plots.html#which-to-use-a-comparison",
    
    "relUrl": "/notes/important_plots.html#which-to-use-a-comparison"
  },"24": {
    "doc": "Nichols Chart, Nyquist Plot, Bode Plot, and Root Locus Plot",
    "title": "Intuition",
    "content": "Bode plot is extremely useful when analyzing open loop frequency reponse \\(G(s)\\) of minimum phase and stable systems to predict the beahvior of the closed loop system \\(\\frac{G(s)}{1+G(s)}\\). However, Bode plot falls apart when dealing with non-minimum phase or unstable systems. This is where Nyquist plot comes in useful. Nyquist plot displays all three in one plot (Gain, Phase, Frequency). Nichols encodes Bode magnitude and phase plots into one single plot, displaying same information as the Nyquist plot in cartesian coordinates. ",
    "url": "/control_notes/notes/important_plots.html#intuition",
    
    "relUrl": "/notes/important_plots.html#intuition"
  },"25": {
    "doc": "Nichols Chart, Nyquist Plot, Bode Plot, and Root Locus Plot",
    "title": "Nyquist Plot",
    "content": ". Nyquist Plot Stability analysis (benefits) . | for minimum phase and stable open loop systems, don‚Äôt corss the cricitical point (-1,0) | Gain margin and Phase Margin can be read from Nyquist Plot | We can still use Nyquist Stability Criterion and Nyquist plot even for unstable open loop systems | Easier to see combinations of gain and phase (disk margin) | Information displayed in polar coordinates. Nyquist Plot Critical Point . Avoid (-1,0) on Nyquist plot. Closed loop system oscillates at that point. | . ",
    "url": "/control_notes/notes/important_plots.html#nyquist-plot",
    
    "relUrl": "/notes/important_plots.html#nyquist-plot"
  },"26": {
    "doc": "Nichols Chart, Nyquist Plot, Bode Plot, and Root Locus Plot",
    "title": "Nichols Plot",
    "content": "Frequency is not explicitly shown just as Nyquist plot . ",
    "url": "/control_notes/notes/important_plots.html#nichols-plot",
    
    "relUrl": "/notes/important_plots.html#nichols-plot"
  },"27": {
    "doc": "Nichols Chart, Nyquist Plot, Bode Plot, and Root Locus Plot",
    "title": "Applications",
    "content": "System Identification with Bode Plot . Given a blackbox LTI system, feeding in signals of various frequency (Sine sweep) and observing the output can generate the bode plot of the transfer function. System Design and Analysis with Bode plot . Fundamental Principle: Open loop system can provide insightful information about the close loop system. Let open loop system = G(s) = L(s) = P(s) * K(s), closed loop system = \\(\\frac{G(s)}{1+G(s)}\\) . Applications of Bode plot . | If \\(G(s)\\), an open loop system transfer function has any 0 dB and -180 degrees phase frequencies (G(s)=-1+0j), then closed loop \\(\\frac{G(s)}{1+G(s)}\\) will oscillate. Bode plot can be used to check. | If open loop system is miminum phase and stable, (both zeroes poles are on the LHP), then we can determine closed loop easily through bode plot | . Key Observation Bode-plot restatements of Nyquist Criterion (margins) . Let \\(\\omega_{gc}\\) be a gain-crossover frequency where \\(|G(j\\omega_{gc})|=1\\) , and let \\(\\omega_{pc}\\) be a phase-crossover frequency where \\(\\angle G(j\\omega_{pc})=-180^\\circ\\). | Phase margin condition (at gain crossover): \\(|G(j\\omega_{gc})|=1 \\quad \\Rightarrow \\quad \\angle G(j\\omega_{gc}) &gt; -180^\\circ\\) (positive phase margin). This ensures the Nyquist plot does not cross the real axis at or left of \\(-1\\). | Gain margin condition (at phase crossover): \\(\\angle G(j\\omega_{pc})=-180^\\circ \\quad \\Rightarrow \\quad |G(j\\omega_{pc})| &lt; 1\\) (positive gain margin). This keeps the Nyquist locus inside the unit circle when it is at \\(-180^\\circ\\), avoiding the point \\(-1\\). | . If both conditions hold for all relevant crossovers and \\(P=0\\), the loop has positive stability margins and the closed loop is stable. ",
    "url": "/control_notes/notes/important_plots.html#applications",
    
    "relUrl": "/notes/important_plots.html#applications"
  },"28": {
    "doc": "Nichols Chart, Nyquist Plot, Bode Plot, and Root Locus Plot",
    "title": "Nichols Chart, Nyquist Plot, Bode Plot, and Root Locus Plot",
    "content": " ",
    "url": "/control_notes/notes/important_plots.html",
    
    "relUrl": "/notes/important_plots.html"
  },"29": {
    "doc": "Control Notes",
    "title": "üß† Control Notes",
    "content": "Welcome to my personal collection of control systems notes. This site compiles essential topics, explanations, and formulas for quick reference and deeper learning. ",
    "url": "/control_notes/#-control-notes",
    
    "relUrl": "/#-control-notes"
  },"30": {
    "doc": "Control Notes",
    "title": "üìö Core Topics",
    "content": ". | Useful Tips Important Intuitions for designing control systems . | Open-loop vs Close-loop control A comparison between Open Loop control and Closed Loop control . | Plot Reviews Review Nichols Chart, Nyquist Plot, Bode Plot, and Root Locus Plot . | PID Control Overview of Proportional-Integral-Derivative control, tuning methods, use cases. | Lead, Lag, and Lead-Lag Compensators Frequency domain intuition, Bode plot effects, stability and performance improvement. | Root Locus Analysis Pole-zero placement and visualizing the impact of controller design. | Optimal Pole Placement in Linear Systems Introduces LQR and pole placement. | LQE Linear quadratic Estimator and Observability. | Controllability and Reachability Illustrates the equivalence between controllability and reachability. | Frequency Analysis and Fourier Transform How to interpret system behavior in the frequency domain, including Fourier Transform and Bode Plots. | Sensitivity, Robustness, and Robust Control Sensitive, complimentary Sensitivity, and robust control techniques . | Stability Analysis Routh-Hurwitz, Nyquist, Lyapunov methods and practical insights. | Discrete-Time Control Z-transform, digital implementation of controllers, sampling effects. | Model Predictive Control (MPC) Optimization-based control for constrained systems (intro-level overview). | SVD . | Data Driven Control Advanced control topics for Machine Learning based control . | . ",
    "url": "/control_notes/#-core-topics",
    
    "relUrl": "/#-core-topics"
  },"31": {
    "doc": "Control Notes",
    "title": "üõ†Ô∏è Tools and Techniques",
    "content": ". | Control System Design Workflow From modeling to simulation to real-world tuning. | Control Using Simulink &amp; Python Practical guides using Simulink, Python (control, matplotlib, etc.). | . ",
    "url": "/control_notes/#%EF%B8%8F-tools-and-techniques",
    
    "relUrl": "/#Ô∏è-tools-and-techniques"
  },"32": {
    "doc": "Control Notes",
    "title": "Interview Prep",
    "content": ". | Kodiak Autonomous Trucking | . Made using Jekyll . ",
    "url": "/control_notes/#interview-prep",
    
    "relUrl": "/#interview-prep"
  },"33": {
    "doc": "Control Notes",
    "title": "Control Notes",
    "content": " ",
    "url": "/control_notes/",
    
    "relUrl": "/"
  },"34": {
    "doc": "Kodiak Autonomous Trucking",
    "title": "Full Dynamic Model of a Truck (Kodiak Interview Prep)",
    "content": "Understanding the full dynamic model of a truck is critical for interviews with autonomous trucking companies like Kodiak. Trucks have unique dynamics due to their size, mass distribution, and articulated trailer structure. ",
    "url": "/control_notes/interview_prep/kodiak.html#full-dynamic-model-of-a-truck-kodiak-interview-prep",
    
    "relUrl": "/interview_prep/kodiak.html#full-dynamic-model-of-a-truck-kodiak-interview-prep"
  },"35": {
    "doc": "Kodiak Autonomous Trucking",
    "title": "1. Basic Models (Used in Control &amp; Estimation)",
    "content": "A. Kinematic Bicycle Model . | Simplified model assuming no slip, pure rolling. | State: \\(x, y, \\theta, v\\) | Control: \\(a, \\delta\\) (acceleration and steering angle) | . \\[\\dot{x} = v \\cos\\theta, \\quad \\dot{y} = v \\sin\\theta, \\quad \\dot{\\theta} = \\frac{v}{L} \\tan\\delta\\] Use case: low-speed control and path planning . B. Dynamic Single-Track Model (No Trailer) . | Captures lateral slip, yaw dynamics, and tire forces. | States: \\(x, y, \\theta, v_x, v_y, r\\) | Inputs: \\(F_x\\), \\(\\delta\\) | . Equations of motion: . | Longitudinal: \\(m(\\dot{v}_x - v_y r) = F_{x,f} \\cos\\delta - F_{y,f} \\sin\\delta + F_{x,r}\\) | Lateral: \\(m(\\dot{v}_y + v_x r) = F_{x,f} \\sin\\delta + F_{y,f} \\cos\\delta + F_{y,r}\\) | Yaw: \\(I_z \\dot{r} = a F_{y,f} \\cos\\delta + a F_{x,f} \\sin\\delta - b F_{y,r}\\) | . Where: . | \\(a\\), \\(b\\): distances from CG to front/rear axle | \\(F_{y,f}\\), \\(F_{y,r}\\): lateral tire forces from slip angles | \\(F_{x,f}\\), \\(F_{x,r}\\): longitudinal tire forces | . ",
    "url": "/control_notes/interview_prep/kodiak.html#1-basic-models-used-in-control--estimation",
    
    "relUrl": "/interview_prep/kodiak.html#1-basic-models-used-in-control--estimation"
  },"36": {
    "doc": "Kodiak Autonomous Trucking",
    "title": "2. Truck-Specific Models",
    "content": "C. Articulated Truck Model (Tractor + Trailer) . Essential for Kodiak! Includes yaw dynamics and articulation between tractor and trailer. Typical state vector: \\(\\mathbf{x} = [x, y, \\psi_t, \\psi_{tr}, v_x, v_y, r_t, r_{tr}]\\) . | \\(\\psi_t\\): yaw angle of tractor | \\(\\psi_{tr}\\): yaw angle of trailer | \\(r_t\\), \\(r_{tr}\\): yaw rates | Articulation angle: \\(\\phi = \\psi_{tr} - \\psi_t\\) | Articulation rate: \\(\\dot{\\phi} = r_{tr} - r_t\\) | . Yaw Dynamics (high-level): . | Tractor: \\(I_{z,t} \\dot{r}_t = \\text{sum of moments on tractor}\\) | Trailer: \\(I_{z,tr} \\dot{r}_{tr} = \\text{sum of moments on trailer}\\) | . Used for high-speed motion, stability control, and trailer swing suppression. ",
    "url": "/control_notes/interview_prep/kodiak.html#2-truck-specific-models",
    
    "relUrl": "/interview_prep/kodiak.html#2-truck-specific-models"
  },"37": {
    "doc": "Kodiak Autonomous Trucking",
    "title": "3. Higher-Fidelity Models (for Simulation &amp; MPC)",
    "content": ". | Pacejka ‚ÄúMagic Formula‚Äù for nonlinear tire force modeling | Suspension &amp; compliance modeling | ABS/EBS braking system dynamics | Multi-body dynamics of each axle and articulation constraint | . ",
    "url": "/control_notes/interview_prep/kodiak.html#3-higher-fidelity-models-for-simulation--mpc",
    
    "relUrl": "/interview_prep/kodiak.html#3-higher-fidelity-models-for-simulation--mpc"
  },"38": {
    "doc": "Kodiak Autonomous Trucking",
    "title": "Summary Table",
    "content": "| Model | Captures | Use Cases | . | Kinematic Bicycle | No dynamics or slip | Path planning, low-speed control | . | Dynamic Single Track | Lateral slip, yaw | Medium-speed control, stability analysis | . | Articulated Truck Model | Tractor-trailer coupling | High-speed maneuvering, safety, control | . | Full Multi-Body Model | All dynamics | Simulation, MPC, offline validation | . ",
    "url": "/control_notes/interview_prep/kodiak.html#summary-table",
    
    "relUrl": "/interview_prep/kodiak.html#summary-table"
  },"39": {
    "doc": "Kodiak Autonomous Trucking",
    "title": "Kodiak Autonomous Trucking",
    "content": " ",
    "url": "/control_notes/interview_prep/kodiak.html",
    
    "relUrl": "/interview_prep/kodiak.html"
  },"40": {
    "doc": "Linear Control Schemes - LQG",
    "title": "Important Control Schemes",
    "content": " ",
    "url": "/control_notes/notes/linear_control_scheme.html#important-control-schemes",
    
    "relUrl": "/notes/linear_control_scheme.html#important-control-schemes"
  },"41": {
    "doc": "Linear Control Schemes - LQG",
    "title": "Linear Quadratic Gaussian (Optimal Control)",
    "content": "where $w$ is the dynamics white noise and $v$ is the external disturbance white noise . Separation Principle . If (A, B) is controllable and (A, C) is observable, then LQE and LQR can be seperately optimized then put together while preserving stability. However, this can lead the system to be non-robust sometimes. ",
    "url": "/control_notes/notes/linear_control_scheme.html#linear-quadratic-gaussian-optimal-control",
    
    "relUrl": "/notes/linear_control_scheme.html#linear-quadratic-gaussian-optimal-control"
  },"42": {
    "doc": "Linear Control Schemes - LQG",
    "title": "Linear Control Schemes - LQG",
    "content": " ",
    "url": "/control_notes/notes/linear_control_scheme.html",
    
    "relUrl": "/notes/linear_control_scheme.html"
  },"43": {
    "doc": "Model Predictive Control",
    "title": "Model Predictive Control (MPC)",
    "content": " ",
    "url": "/control_notes/notes/mpc.html#model-predictive-control-mpc",
    
    "relUrl": "/notes/mpc.html#model-predictive-control-mpc"
  },"44": {
    "doc": "Model Predictive Control",
    "title": "Model Predictive Control",
    "content": " ",
    "url": "/control_notes/notes/mpc.html",
    
    "relUrl": "/notes/mpc.html"
  },"45": {
    "doc": "Open loop vs closed loop control",
    "title": "Open Loop vs Closed Loop Control",
    "content": "Why feedback control? . | Uncertainty (inherent in the system) in open loop system dynamics. Preplanned control inputs may fall flat against uncertainties. | Instability of the open loop system cann never be dealt with by open loop control. Feedback control allows us to directly change the dynamics of the system, inlcuding the eigenvalues of the system. | Disturbances (external forces) can be rejected by feedback. | Energy and efficiency. | . ",
    "url": "/control_notes/notes/openclose.html#open-loop-vs-closed-loop-control",
    
    "relUrl": "/notes/openclose.html#open-loop-vs-closed-loop-control"
  },"46": {
    "doc": "Open loop vs closed loop control",
    "title": "Fixing Instability with Pole Placement",
    "content": "\\(\\dot{x}=Ax + Bu\\), \\(y=Cx\\), let \\(u=-Kx\\), \\(\\dot{x}=Ax-BKx=(A-BK)x\\) We are able to change the actual dynamics of the system to stabilize it by selecting appropriate \\(B*K\\). ",
    "url": "/control_notes/notes/openclose.html#fixing-instability-with-pole-placement",
    
    "relUrl": "/notes/openclose.html#fixing-instability-with-pole-placement"
  },"47": {
    "doc": "Open loop vs closed loop control",
    "title": "An Ideal Controller",
    "content": ". | design for stability | compensate for uncertainty | reject diturbance | attenduate noise | . ",
    "url": "/control_notes/notes/openclose.html#an-ideal-controller",
    
    "relUrl": "/notes/openclose.html#an-ideal-controller"
  },"48": {
    "doc": "Open loop vs closed loop control",
    "title": "Why is Open Loop Transfer Functions Important",
    "content": ". | Closed-loop stability depends on open-loop behavior . | The closed-loop characteristic equation is: \\(1+L(s)=0\\) where \\(L(s)\\) is the open-loop transfer function. | All the closed-loop poles (which determine stability) come from this equation. | If \\(L(s)\\) has certain properties (like unstable poles or bad phase margins), the closed loop can become unstable. | . | Open Loop Transfer Functions reveal robustness by Sensitivity and Complementary Sensitivity . | The closer the Open Loop Transfer Function L gets to -I, the bigger Sensitivity gets, and the less stable the system gets | . | . ",
    "url": "/control_notes/notes/openclose.html#why-is-open-loop-transfer-functions-important",
    
    "relUrl": "/notes/openclose.html#why-is-open-loop-transfer-functions-important"
  },"49": {
    "doc": "Open loop vs closed loop control",
    "title": "Open loop vs closed loop control",
    "content": " ",
    "url": "/control_notes/notes/openclose.html",
    
    "relUrl": "/notes/openclose.html"
  },"50": {
    "doc": "PID Control",
    "title": "PID Control",
    "content": "This page only covers continuous-time PID control. For more advanced topics on discrete PID, visit Discrete Time Control page for more details. PID by itself is a linear controller. Gain Scheduling, Anti-windup schemes, derivative filtering, gain scheduling can make it non-linear . ",
    "url": "/control_notes/notes/pid.html",
    
    "relUrl": "/notes/pid.html"
  },"51": {
    "doc": "PID Control",
    "title": "Which controller to use?",
    "content": "\\(\\begin{array}{c|c|c|c} Example &amp; System Order &amp; Controller &amp; Reasoning\\\\ \\hline \\text{Controlling mass position using force} &amp; 2 &amp; \\text{PD or PID} &amp; \\text{Typically needs damping like mass-spring damper, otherwise will oscillate} \\\\ \\text{Controlling V across C using current} &amp; 1 &amp; \\text{P or PI} &amp; \\text{not much danger of over-shoot or oscillation} \\\\ \\text{Controlling I across R using voltage} &amp; 0 &amp; \\text{P or PI} &amp; \\text{not much danger, direct mapping} \\end{array}\\) . Note System order denotes how many ‚Äòintegration‚Äô away is your control input from output. For instance controlling position with force would be a second order system. ",
    "url": "/control_notes/notes/pid.html#which-controller-to-use",
    
    "relUrl": "/notes/pid.html#which-controller-to-use"
  },"52": {
    "doc": "PID Control",
    "title": "PI vs PD vs PID",
    "content": "The derivative controller is highly sensitive to noise and may throw system into instability. PI controller . PI controller reduces both rise time and the steady state errors of the system. Integral term introduces phase lag, which may slow down response time. PD controller . A PD controller reduces transients like rise time, overshoot, and oscillations in the output. D controller cannot exist on its own since itself doesn‚Äôt stabilize the system, but amplifies noise. ",
    "url": "/control_notes/notes/pid.html#pi-vs-pd-vs-pid",
    
    "relUrl": "/notes/pid.html#pi-vs-pd-vs-pid"
  },"53": {
    "doc": "PID Control",
    "title": "Strategies for Tuning a PID Controller",
    "content": ". Diagram Walkthrough . | Model representation | . | run input sequence . | observe step response for Cohen-Coon | . | Heuristic Methods: System model not required, only need to measure certain traits such as process gain, time constant. and dead time. | Cohen-Coon | Zeguler-Nichols (needs to be careful on hardware, due to oscillatory behavior) | . | System Identification. | Measure step-response of system. | Tweak your model coefficients so step responses match. | Model needs to be defined beforehand. | . | Tuning method with Model . | manual tuning . | pole placement | Loop Shaping | Heuristic Methods. (make model oscilatory NOT hardware) | . | auto tuning | . | . Manual PID Tuning Strategy . | Start with: | . \\[K_P &gt; 0, \\quad K_I = 0, \\quad K_D = 0\\] . | Increase \\(K_P\\) until: . | The system starts responding to setpoint changes. | It begins to oscillate consistently without settling. | . This means it‚Äôs reached the edge of stability. | Back off \\(K_P\\) by ~10‚Äì20% to get a stable (but responsive) system. | Increase \\(K_D\\) to: . | Dampen the oscillations. | Improve settling time and reduce overshoot. | . | Increase \\(K_I\\) slowly to: . | Eliminate steady-state error (e.g. small drift from setpoint). | Watch for overshoot or oscillation due to integral windup. | . | . ",
    "url": "/control_notes/notes/pid.html#strategies-for-tuning-a-pid-controller",
    
    "relUrl": "/notes/pid.html#strategies-for-tuning-a-pid-controller"
  },"54": {
    "doc": "PID Control",
    "title": "üß™ Ziegler‚ÄìNichols Method (Ultimate Gain Method)",
    "content": "This is a classical tuning rule. It gives you a starting point for \\(K_P,\\ K_I,\\ \\text{and}\\ K_D\\) based on when the system first starts oscillating. üîß Steps: . | Set: \\(K_I = 0,\\quad K_D = 0\\) . | Increase \\(K_P\\) until the system output shows sustained oscillations (constant amplitude). | That value of \\(K_P\\) is called the ultimate gain, denoted: \\(K_u\\) | . | Measure the oscillation period ‚Äî the time between peaks ‚Äî and call it: \\(T_u\\) . | . üìê Use these tables to compute gains: . | Controller | \\(K_P\\) | \\(K_I\\) | \\(K_D\\) | . | P | \\(0.5K_u\\) | ‚Äì | ‚Äì | . | PI | \\(0.45K_u\\) | \\(1.2K_u / T_u\\) | ‚Äì | . | PID | \\(0.6K_u\\) | \\(2K_u / T_u\\) | \\(K_u T_u / 8\\) | . | Control Type | \\(K_p\\) | \\(T_i\\) | \\(T_d\\) | \\(K_i\\) | \\(K_d\\) | . | P | \\(0.5K_u\\) | ‚Äì | ‚Äì | ‚Äì | ‚Äì | . | PI | \\(0.45K_u\\) | \\(0.8\\overline{3}T_u\\) | ‚Äì | \\(0.54K_u / T_u\\) | ‚Äì | . | PD | \\(0.8K_u\\) | ‚Äì | \\(0.125T_u\\) | ‚Äì | \\(0.10K_u T_u\\) | . | Classic PID | \\(0.6K_u\\) | \\(0.5T_u\\) | \\(0.125T_u\\) | \\(1.2K_u / T_u\\) | \\(0.075K_u T_u\\) | . | Pessen Integral Rule | \\(0.7K_u\\) | \\(0.4T_u\\) | \\(0.15T_u\\) | \\(1.75K_u / T_u\\) | \\(0.105K_u T_u\\) | . | Some Overshoot | \\(0.3\\overline{3}K_u\\) | \\(0.50T_u\\) | \\(0.3\\overline{3}T_u\\) | \\(0.6\\overline{6}K_u / T_u\\) | \\(0.1\\overline{1}K_u T_u\\) | . | No Overshoot | \\(0.20K_u\\) | \\(0.50T_u\\) | \\(0.3\\overline{3}T_u\\) | \\(0.40K_u / T_u\\) | \\(0.06\\overline{6}K_u T_u\\) | . ‚ö†Ô∏è Notes for Drone Applications . | Ziegler‚ÄìNichols gives aggressive tuning, often with overshoot. | For drones, it‚Äôs safer to: . | Start with rate control loops (angular velocity). | Then move to attitude control (roll, pitch, yaw). | . | . ",
    "url": "/control_notes/notes/pid.html#-zieglernichols-method-ultimate-gain-method",
    
    "relUrl": "/notes/pid.html#-zieglernichols-method-ultimate-gain-method"
  },"55": {
    "doc": "PID Control",
    "title": "Integral Windup",
    "content": "Error builds up even though actuator saturates. takes take for negative error to be reflected in the controller . Anti-Windup . Most anti-windup schemes prevents integral from accumulating error past a threshold . | clamping: two checks (if both true, shut off integration) . | Output is saturating (clamp the output of the PID (this needs to be conservative), if the output before and after the clamp are the same, then actuator is beginning to get saturated.) | Input and output have same sign | . | block calculation | observer approach | . ",
    "url": "/control_notes/notes/pid.html#integral-windup",
    
    "relUrl": "/notes/pid.html#integral-windup"
  },"56": {
    "doc": "PID Control",
    "title": "Derivative Control",
    "content": "Derivative control ‚Äúpredicts the future‚Äù in constrast to integral control - a decrease in error gives a decrease in control input. Noise amplifies Derivative control output. Derivative Control Example . Altitude Control for Quadcopter: Desired altitude 50m, as drone shoots up, error term decreases (negative derivative) -&gt; negative value from derivative term, slows motors down, reduce over shoot . ",
    "url": "/control_notes/notes/pid.html#derivative-control",
    
    "relUrl": "/notes/pid.html#derivative-control"
  },"57": {
    "doc": "PID Control",
    "title": "How to derive a model",
    "content": "First principles . This methods also works if one knows the individual components of the system. | Newtonian Mechanics | Lagrangian Mechanics | . System ID . If the model is too complicated, system ID can work (black box method). No need to know the details of the system. ",
    "url": "/control_notes/notes/pid.html#how-to-derive-a-model",
    
    "relUrl": "/notes/pid.html#how-to-derive-a-model"
  },"58": {
    "doc": "PID Control",
    "title": "PID Pole Placement (LQG) and Loop Shaping (Robust Control)",
    "content": "PID Transfer Function . \\(C(s) = K_p + \\frac{K_i}{s} + K_d s\\) . How does PID affect Loop Shaping (Bode Plot): . 1. Proportional term (\\(K_p\\)) . | Simply scales the magnitude of the open-loop transfer function across all frequencies by \\(K_p\\) (shifts the Bode magnitude plot up or down). | No slope change, no phase lead/lag (phase stays the same as the plant‚Äôs at each frequency). | . 2. Integral term (\\(\\frac{K_i}{s}\\)) . | Adds a pole at \\(s=0\\) and a zero at \\(s=-K_i/K_p\\) (if expressed in standard form for PI control). | In the Bode plot: increases low-frequency gain slope by +20 dB/dec below the zero, giving better low-frequency tracking and disturbance rejection. | Phase: introduces ‚Äì90¬∞ lag below the zero frequency (eventually reduced to 0¬∞ after the zero). | . 3. Derivative term (\\(K_d s\\)) . | Adds a zero at the origin and a pole at infinity (in practice, implemented with a high-frequency roll-off to avoid noise). | In the Bode plot: increases high-frequency gain slope by +20 dB/dec above the zero‚Äôs frequency, giving phase lead and faster response. | Phase: can give up to +90¬∞ lead around its zero. | . Putting them together in loop shaping: . | Integral boosts the low-frequency magnitude to push the gain crossover lower and improve steady-state accuracy. | Derivative boosts magnitude at mid-frequencies to increase phase margin, which can stabilize a plant with low natural phase margin. | Proportional shifts the entire magnitude plot up or down to meet your crossover frequency and gain margin targets. | . ",
    "url": "/control_notes/notes/pid.html#pid-pole-placement-lqg-and-loop-shaping-robust-control",
    
    "relUrl": "/notes/pid.html#pid-pole-placement-lqg-and-loop-shaping-robust-control"
  },"59": {
    "doc": "PID Control",
    "title": "PID Effect on Pole Placement",
    "content": "1Ô∏è‚É£ Starting point ‚Äî closed-loop poles come from \\(1 + L(s) = 0\\) . For unity feedback: . \\[T(s) = \\frac{C(s) G(s)}{1 + C(s) G(s)}\\] The closed-loop poles are the roots of: . \\[1 + C(s) G(s) = 0\\] Adding a PID means replacing \\(C(s)\\) with: . \\[C(s) = K_p + \\frac{K_i}{s} + K_d s\\] That changes the polynomial \\(1 + C(s) G(s) = 0\\), which changes the pole locations. 2Ô∏è‚É£ How each term influences pole placement . (a) Proportional \\(K_p\\) . | Multiplies the plant‚Äôs transfer function by a constant. | Effect: Moves the closed-loop poles along the root locus without changing its shape. | Higher \\(K_p\\) ‚Üí poles move toward/into the left-half plane faster (increasing speed) but can reduce stability margin. | . (b) Integral \\(\\frac{K_i}{s}\\) . | Adds a pole at the origin to the open-loop transfer function. | This changes the root locus shape, not just shifts along it. | Forces the steady-state error for step inputs to zero by making the closed-loop a Type 1 system (or higher). | Because it adds a pole, it can also slow down the system and reduce damping unless compensated. | . (c) Derivative \\(K_d s\\) . | Adds a zero to the open-loop transfer function. | Zeros bend the root locus toward themselves, which can move dominant poles to locations with higher damping ratio. | Used to improve transient response (overshoot, settling time) by pulling poles into a ‚Äúnicer‚Äù part of the complex plane. | . 3Ô∏è‚É£ Big picture: PID in pole placement terms . | P: Changes gain ‚Üí moves poles along an existing root-locus path. | I: Adds a pole at origin ‚Üí changes the shape of the root locus, introduces the integrator effect. | D: Adds a zero ‚Üí bends the root locus toward more desirable damping. | . The net effect is that PID changes both: . | The geometry of the root locus (via added poles/zeros) | The position along that locus (via gain tuning) | . ",
    "url": "/control_notes/notes/pid.html#pid-effect-on-pole-placement",
    
    "relUrl": "/notes/pid.html#pid-effect-on-pole-placement"
  },"60": {
    "doc": "PID Control",
    "title": "Gain Scheduling - Control Systtems in Practice",
    "content": ". ",
    "url": "/control_notes/notes/pid.html#gain-scheduling---control-systtems-in-practice",
    
    "relUrl": "/notes/pid.html#gain-scheduling---control-systtems-in-practice"
  },"61": {
    "doc": "PID Control",
    "title": "Important Advanced PID concepts for Further Study",
    "content": "Cascade Loops . Why multiple loops? . | Inner loops can be tuned to respond quickly to local disturbances, the outer loop can be tuned more conservatively to reject sensor noise and increase stability | Cascade approach makes it easier to isolate the problem | Multiple groups can work separate parts. | The motor you buy has a built-in controller | . | . How to Tune Cascade loops . | Case 1: Inner loop speed¬†¬ª outer loop speed . | can be tuned separately. Assume the other loops not present and tune like normal | . | Case 2: Inner loop speed \\(\\approx\\) Outerloop speed . | Tune inner loop with a guess | Tune outer loop | Iterate | . | . Discrete PID . There are three major characteristics of a digital system: 1. Sample Time 2. Quatization 3. Transport Delay . Please check out discrete time control page for more details on discrete PID controller . ",
    "url": "/control_notes/notes/pid.html#important-advanced-pid-concepts-for-further-study",
    
    "relUrl": "/notes/pid.html#important-advanced-pid-concepts-for-further-study"
  },"62": {
    "doc": "Pole Placement",
    "title": "Pole Placement",
    "content": " ",
    "url": "/control_notes/notes/pole_placement.html",
    
    "relUrl": "/notes/pole_placement.html"
  },"63": {
    "doc": "Pole Placement",
    "title": "Linear system",
    "content": "For the controllable linear system, \\(\\dot{x} = Ax+Bu, u=-Kx, \\dot{x}=(A-BK)x\\), . there‚Äôs a trade off between convergence rate (eigenvalues or poles) and system jerkiness, ie, more negative real parts would lead to faster convergence to stability but sacrifice system response smoothness. Linear Quadratic Regulator (LQR) can be used to find optimal point. Poles to the far left of the complex plane: . Pro: . | Faster Response | Increased stability margin | . Cons: . | Control effort becomes large. Actuators may saturate. | Sensitivity to Noise and model uncretainty. High gain feedback amplified measurement noise and unmodeled dynamics | Numerical instability | Reduced Robustness | . ",
    "url": "/control_notes/notes/pole_placement.html#linear-system",
    
    "relUrl": "/notes/pole_placement.html#linear-system"
  },"64": {
    "doc": "Pole Placement",
    "title": "Linear Quadratic Regulator",
    "content": "Formulation . Cost function \\(J=\\int_{0}^{\\infty}(x^TQx + u^TRu)dt\\), where Q is positive semidefinite and x and u are dependet on t. There are two components of the cost: . | first term penalizes difference between desired state and actual state, which accelerates convergence. | second term penalizes bigger u - for instance, gas may be expensive and the cost cannot be exorbitant. The term linear refers to \\(u=-Kx\\), which is a linear controller; Quadratic refers to the Cost function; Regulator means this stabilizes the system. Result . LQR gives u=-Kx specifically the K matrix that yields the best strategy. | . ",
    "url": "/control_notes/notes/pole_placement.html#linear-quadratic-regulator",
    
    "relUrl": "/notes/pole_placement.html#linear-quadratic-regulator"
  },"65": {
    "doc": "Pole Placement",
    "title": "Linear Quadratic Estimator",
    "content": "The Kalman filter is an example of an LQE. More details are in State Estimation page. ",
    "url": "/control_notes/notes/pole_placement.html#linear-quadratic-estimator",
    
    "relUrl": "/notes/pole_placement.html#linear-quadratic-estimator"
  },"66": {
    "doc": "Robust Control",
    "title": "Robust Control and Loop Shaping",
    "content": " ",
    "url": "/control_notes/notes/robust_control.html#robust-control-and-loop-shaping",
    
    "relUrl": "/notes/robust_control.html#robust-control-and-loop-shaping"
  },"67": {
    "doc": "Robust Control",
    "title": "Motivation and Background",
    "content": "A paper by John Doyle proved that there is no guarantee on robustness of LQG scheme. This discovery pushed the industry towards robust control. We need to delve into Laplace domain and determine Robustness of a system. Laplace Transform domain gives us insights into the performance, sensitivity, and robustness characteristics. ",
    "url": "/control_notes/notes/robust_control.html#motivation-and-background",
    
    "relUrl": "/notes/robust_control.html#motivation-and-background"
  },"68": {
    "doc": "Robust Control",
    "title": "Three Equivalent Representations of Linear Systems",
    "content": ". | State space representation \\(\\dot{x}=Ax+Bu \\\\ y=Cx\\) | Transfer functions \\(G(s)=C(sI-A)^{-1}B\\) | Impulse response time domain \\(y(t)=\\int_{0}^{t}h(t-\\tau)u(\\tau)d\\tau\\) This is a convolution between impulse response and control input | . Note there are different usages for each of the three representations. | If physics can be represented, State space representation can be very useful. | Transfer functions can be useful for investigating robustness and performance | . ",
    "url": "/control_notes/notes/robust_control.html#three-equivalent-representations-of-linear-systems",
    
    "relUrl": "/notes/robust_control.html#three-equivalent-representations-of-linear-systems"
  },"69": {
    "doc": "Robust Control",
    "title": "Deriving Sensitivity and Complementary Sensitivity with Loop Transfer Function",
    "content": ". where d is disturbance, n is measurement noise, r is reference setpoint, P is the system transfer function, and K is the controller transfer function. \\[L = PK\\] Note K is applied first to the error before P. \\[I*y = P_{d}*d+ PK(r-y-n), \\text{where} (r-y-n) = \\epsilon\\] \\[(I+Pk)*y = PKr + P_{d}*d - PKn\\] \\[y = (I+P*K)^{-1} * PKr + (I+PK)^{-1}P_{d}d - (I+PK)^{-1}PKn\\] \\(\\text{Therefore, } (I+PK)^{-1}PK \\text{ is called complimentary sensitivity matrix, and } (I+(Pk))^{-1} \\text{ is the sensitivity matrix}\\) . | first term of y tracks trajectory | second term of y rejects disturbance | third term of y attenuates noise | . ",
    "url": "/control_notes/notes/robust_control.html#deriving-sensitivity-and-complementary-sensitivity-with-loop-transfer-function",
    
    "relUrl": "/notes/robust_control.html#deriving-sensitivity-and-complementary-sensitivity-with-loop-transfer-function"
  },"70": {
    "doc": "Robust Control",
    "title": "Sensitivity and Complementary Sensitivity Functions",
    "content": "In a standard negative feedback loop: . | Plant: \\(G(s)\\) | Controller: \\(K(s)\\) | Loop transfer function: \\(L(s) = K(s)G(s)\\) | . 1. Sensitivity Function \\(S(s)\\) . \\[S(s) = \\frac{1}{1 + L(s)} = \\frac{1}{1 + K(s)G(s)}\\] . | Measures the system‚Äôs sensitivity to disturbances and model uncertainty. | A smaller \\(|S(j\\omega)|\\text{ means better disturbance rejection at frequency }\\omega\\). | . 2. Complementary Sensitivity Function \\(T(s)\\) . \\[T(s) = \\frac{L(s)}{1 + L(s)} = \\frac{K(s)G(s)}{1 + K(s)G(s)}\\] . | Measures the system‚Äôs response to the reference input and its sensitivity to measurement noise. | A larger \\(|T(j\\omega)|\\) at low frequencies means better reference tracking. | . 3. Transfer Functions Bode Plots . Error Term \\(\\mathcal{E} = r - y_{m} = S*r - S*P_{d}*d + T*n\\) where . | \\(n\\) is measurement noise | \\(P_{d}\\) is disturbance Transfer Function and d is disturbance. \\((\\text{L loop output} + P_{d}*d=y)\\) | \\(r\\) is reference setpoint | \\(S\\) is Sensitivity and \\(T\\) is Complementary Sensitivity | . Why does the Bode plot look like that? . | S needs to be small in low frequencies to minimize error \\(\\mathcal{E}\\) (first term in \\(\\mathcal{E}\\) formula), since a realistic \\(r\\) would be low in frequency for system to follow. | Reference Tracking and disturbance rejection are typically low frequency phenomemon. | T needs to be small in maganitude for high frequencies, since noise \\(n\\) is generally high in frequency. | \\(\\omega_ {c}\\) denotes the crossover frequency, being the frequency at which Sensitivity starts to increase and Complementary Sensitivity begins to decrease. | \\(\\omega_ {c}\\) can be tuned to be where the user thinks noise begin to overwhelm the system. | Peaks or bumps in Sensitivty transfer function is undesirable and needs to be attenuated | . 4. Relationship . \\[S(s) + T(s) = 1\\] . MIMO Case (Matrix Form) . Let: . | \\(G(s) \\in \\mathbb{R}^{p \\times m}\\) be the plant | \\(K(s) \\in \\mathbb{R}^{m \\times p}\\) be the controller | \\[L(s) = G(s)K(s)\\] | . Then: . \\(S(s) = (I + L(s))^{-1}\\) \\(T(s) = L(s)(I + L(s))^{-1}\\) . These satisfy: . \\[S(s) + T(s) = I\\] . Summary . | Function | Formula | Meaning | . | \\(S(s)\\) | \\(\\frac{1}{1 + K(s)G(s)}\\) or \\((I + G(s)K(s))^{-1}\\) | Sensitivity to disturbances | . | \\(T(s)\\) | \\(\\frac{K(s)G(s)}{1 + K(s)G(s)}\\) or \\(G(s)K(s)(I + G(s)K(s))^{-1}\\) | Response to reference / noise sensitivity | . | Relation | \\(S + T = 1\\) or \\(S + T = I\\) | Always holds | . ",
    "url": "/control_notes/notes/robust_control.html#sensitivity-and-complementary-sensitivity-functions",
    
    "relUrl": "/notes/robust_control.html#sensitivity-and-complementary-sensitivity-functions"
  },"71": {
    "doc": "Robust Control",
    "title": "Loop Shaping",
    "content": ". | The Bode plot of the Loop Transfer Function looks like an Integrator . | high gain at low frequencies for good reference tracking and noise rejection (S needs to be small so L needs to be big ) | low gain at high frequencies to attenuate noise | bode plot can be shifted left or right by multiplying transfer function by \\(\\omega_{s}/s\\) | . | Loop shaping is a collection of several different design methods based on the idea of choosing a compensator that gives a loop transfer function with a desired shape. | One possibility is to start with the loop transfer function of the process and modify it by changing the gain and adding poles and zeros to the controller until the desired shape is obtained. | . If you have a model for the system and a desired Loop Transfer Function, MATLAB can tune K, the controller transfer function to robustify control system. No LQG needed. Non-Robustness for Loop Shaping . The peaks in Sensitivity graph is undesirable since the larger the peak, the closer the controller system gets to instability (-1 point on the Nyquist plot). where \\(max|s|=1/m\\) . Therefore a larger peak in sensitivity S correspond to a closer distance to instability. The actual system dynamics can rotate the curve (Phase) or shift it left to make the system unstable. Cone of Uncertainty . This takes into account of model uncertainty in P. Causes of Non-Robustness and Unstability . | model uncertainty. The real system gain is smaller or bigger than the model | Time delays. | Right Half Plane (RHP) zeros of P (the system transfer function) | . Important Note: Time delay and RHP zeros of P give a fundamental limit on how small \\(max(|S|)\\) can be! To satisfy these hard rules set by Time delay and RHP zeros, one needs to shift \\(\\omega_{c}\\) (the crossover frequency) to the left. This means the systems can only track low frequency references and reject lower frequency disturbances. Recall: a RHP zero would cause the system to go in the wrong direction before converging. (This behavior is similar to a time delay.) . A RHP zero introduces Non-minimum Phase and would cause the system to go in the wrong direction before converging. Example: 1. Aircraft gaining altitude. 2. parallel park. ",
    "url": "/control_notes/notes/robust_control.html#loop-shaping",
    
    "relUrl": "/notes/robust_control.html#loop-shaping"
  },"72": {
    "doc": "Robust Control",
    "title": "Robust Control",
    "content": " ",
    "url": "/control_notes/notes/robust_control.html",
    
    "relUrl": "/notes/robust_control.html"
  },"73": {
    "doc": "Root Locus Analysis",
    "title": "Root Locus Analysis",
    "content": " ",
    "url": "/control_notes/notes/root-locus.html",
    
    "relUrl": "/notes/root-locus.html"
  },"74": {
    "doc": "Root Locus Analysis",
    "title": "Poles and Zeros",
    "content": ". | The stability of an LTI system depends solely on the poles of its transfer function, including stability, speed of decay/growth, or natural oscillaitons. | Zeros (roots of the numerator) don‚Äôt directly affect stability because they don‚Äôt appear in the characteristic equation that governs the natural modes of the system. | . What do Zeros do? . | Transient Shape and Overshoot . | Zeros can introduce additional terms in the time response that can increase or decrease overshoot, depending on their location. | A zero close to the origin (s = 0) or near the imaginary axis can significantly change the transient waveform. | . | Direction and Phase . | Zeros affect the phase of the frequency response. | . | Magnitude Shaping . | Zeros can boost or attenuate specific frequency components, affecting bandwidth and disturbance rejection. | . | . ",
    "url": "/control_notes/notes/root-locus.html#poles-and-zeros",
    
    "relUrl": "/notes/root-locus.html#poles-and-zeros"
  },"75": {
    "doc": "Stability Analysis",
    "title": "Stability Analysis",
    "content": " ",
    "url": "/control_notes/notes/stability.html",
    
    "relUrl": "/notes/stability.html"
  },"76": {
    "doc": "Stability Analysis",
    "title": "Stability Margins - Gain and Phase Margins",
    "content": "In simple terms, Gain and Phase margins are the safe net and the extra that protects us from instability. less margin = less stable . Note: Gain crossover frequency is used to caluclate Phase Margin. Phase crossover frequency is used to caculate Gain Margin. The Gain and PhaseMargins are defined with respect to open-loop transfer function, but the margins are not intrinsic properties of the open-loop system alone, and are only meaningful for the corresponding closed-loop system. Gain Margin . The gain margin (GM) is defined at the phase crossover frequency \\(\\omega_{pc} \\text{ where } \\angle L(j\\omega_{pc}) = -180^\\circ\\): . \\[GM = \\frac{1}{|L(j\\omega_{pc})|}\\] In decibels (dB): . \\[GM_{\\text{dB}} = -20 \\log_{10} |L(j\\omega_{pc})|\\] If there are multiple Phase crossover frequencies \\(\\omega_{pc}\\), use the most conservative Gain Margin. Phase Margin . The phase margin (PM) is defined at the gain crossover frequency \\(\\omega_{gc}\\) where \\(|L(j\\omega_{gc})| = 1\\): . \\[PM = 180^\\circ + \\angle L(j\\omega_{gc})\\] . Margins and Sensitivity . Peaks in Sensitivity Plots are directly correlated with Gain and Phase Margins. The smaller the margins, the bigger the peak. ",
    "url": "/control_notes/notes/stability.html#stability-margins---gain-and-phase-margins",
    
    "relUrl": "/notes/stability.html#stability-margins---gain-and-phase-margins"
  },"77": {
    "doc": "Stability Analysis",
    "title": "Nyquist Criterion ‚Äî Bode/Nyquist Terms (Unity Feedback)",
    "content": "Setup. Let the open-loop transfer be \\(G(s)\\) for a unity-feedback loop with closed-loop characteristic \\(1+G(s)=0\\). Let: . | \\(P\\) = number of open-loop poles of \\(G(s)\\) in the right-half plane (RHP), | \\(N\\) = number of clockwise encirclements of the Nyquist critical point \\(-1+0j\\) by the Nyquist plot of \\(G(j\\omega)\\) (standard Nyquist contour), | \\(Z\\) = number of closed-loop poles in the RHP. | . General Nyquist criterion. \\(Z = N + P.\\) The closed loop is stable iff \\(Z=0\\). Equivalently, the Nyquist plot must encircle \\(-1\\) clockwise exactly \\(N=-P\\) times. Common special case (open-loop stable, i.e., \\(P=0\\)). If \\(G(s)\\) has no RHP poles and no poles on the \\(j\\omega\\)-axis (aside from allowable integrators handled with the modified contour), then: . | Closed loop is stable iff the Nyquist plot of \\(G(j\\omega)\\) does not encircle \\(-1+0j\\) (i.e., \\(N=0 \\Rightarrow Z=0\\)). | . Bode-plot restatements (margins) . Let \\(\\omega_{gc}\\) be a gain-crossover frequency where \\(|G(j\\omega_{gc})|=1\\), and let \\(\\omega_{pc}\\) be a phase-crossover frequency where \\(\\angle G(j\\omega_{pc})=-180^\\circ\\). | Phase margin condition (at gain crossover): \\(|G(j\\omega_{gc})|=1 \\quad \\Rightarrow \\quad \\angle G(j\\omega_{gc}) &gt; -180^\\circ\\) (positive phase margin). This ensures the Nyquist plot does not cross the real axis at or left of \\(-1\\). | Gain margin condition (at phase crossover): \\(\\angle G(j\\omega_{pc})=-180^\\circ \\quad \\Rightarrow \\quad |G(j\\omega_{pc})| &lt; 1\\) (positive gain margin). This keeps the Nyquist locus inside the unit circle when it is at \\(-180^\\circ\\), avoiding the point \\(-1\\). | . If both conditions hold for all relevant crossovers and \\(P=0\\), the loop has positive stability margins and the closed loop is stable. Notes/Caveats . | If \\(P&gt;0\\) (open-loop unstable), you must have exactly \\(N=-P\\) clockwise encirclements of \\(-1\\). Simple ‚Äúmargin checks‚Äù at crossovers are insufficient without accounting for \\(P\\). | Poles on the imaginary axis (e.g., pure integrators) require the standard indentation in the Nyquist contour; apply the modified criterion accordingly. | The above statements presume unity feedback; for non-unity feedback, apply the criterion to the appropriate open-loop function that multiplies the feedback path. | . ",
    "url": "/control_notes/notes/stability.html#nyquist-criterion--bodenyquist-terms-unity-feedback",
    
    "relUrl": "/notes/stability.html#nyquist-criterion--bodenyquist-terms-unity-feedback"
  },"78": {
    "doc": "State Space Representation",
    "title": "State Space Representation",
    "content": "Coming soon‚Ä¶ . ",
    "url": "/control_notes/notes/state-space.html",
    
    "relUrl": "/notes/state-space.html"
  },"79": {
    "doc": "State Estimation",
    "title": "State Estimation",
    "content": " ",
    "url": "/control_notes/notes/state_estim.html",
    
    "relUrl": "/notes/state_estim.html"
  },"80": {
    "doc": "State Estimation",
    "title": "Measurement Model",
    "content": "\\(\\dot{x}=Ax+Bu, y=Cx, x\\in\\mathbb{R^n}, y \\in\\mathbb{R^p}\\) . ",
    "url": "/control_notes/notes/state_estim.html#measurement-model",
    
    "relUrl": "/notes/state_estim.html#measurement-model"
  },"81": {
    "doc": "State Estimation",
    "title": "Observability",
    "content": "In simple terms, observability is if any state in x can be reproduced and deduced from measurements y(t) . ",
    "url": "/control_notes/notes/state_estim.html#observability",
    
    "relUrl": "/notes/state_estim.html#observability"
  },"82": {
    "doc": "State Estimation",
    "title": "Observability Matrix",
    "content": "\\(\\mathbb{O} = \\begin{bmatrix} C \\\\ CA \\\\ CA^2 \\\\ \\vdots \\\\ CA^{n-1} \\end{bmatrix}\\) This is a tall matrix and therefore its rank is the column rank. Note that the C matrices are measurement matrices, not controllability matrices. | The system is observable if rank(O)=n. | The full state x can be estimated from y. | Degrees of Observability can be calculated from the Observability Gramian and the SVD | . ",
    "url": "/control_notes/notes/state_estim.html#observability-matrix",
    
    "relUrl": "/notes/state_estim.html#observability-matrix"
  },"83": {
    "doc": "State Estimation",
    "title": "Kalman Filter (Linear Quadratic Estimator)",
    "content": "Notes . | Both Kalman Filter and LQR solve an algebraic Riccati Equation, yielding a closed-form solution | The algebraic Riccati Equation for Kalman filter is very similar to that of LQR. | Kalman filter gain (\\(K_{k}\\)) is derived by minimizing the estimate coveriance matrix \\(P_{k}\\) | . Kalman is a Full State Estimator that measures full state $x(t)$ given the knowledge of the measurement \\(y(t)\\) and control input \\(u(t)\\). The eigenvalues of the Kalman filter signifies how fast estimates converge to the true state. Pole placement can be performed on Kalman to find the optimal eigenvalues. More aggressive poles means Kalman will be more susceptible to external noise. Kalman Cost Function . \\(J= \\mathbb{E}[(x-\\hat{x})^T(x-\\hat{x})]\\) . Measurement Noise . \\(\\epsilon = x - \\hat{x} \\\\ \\dot{\\epsilon}=(A-KC) \\epsilon + w_{d} - Kw_{n}\\), where K is the Kalman gain and C is the measurement matrix, W_{d} is the process noise from system dynamics and w_{n} is the sensor noise . Two Major noises . | Model Noise \\(w_{d}\\) | Measurement Noise \\(w_{n}\\) if one is high, trust the other more. | . ",
    "url": "/control_notes/notes/state_estim.html#kalman-filter-linear-quadratic-estimator",
    
    "relUrl": "/notes/state_estim.html#kalman-filter-linear-quadratic-estimator"
  },"84": {
    "doc": "SVD",
    "title": "Intuitive Interpretations",
    "content": " ",
    "url": "/control_notes/notes/svd.html#intuitive-interpretations",
    
    "relUrl": "/notes/svd.html#intuitive-interpretations"
  },"85": {
    "doc": "SVD",
    "title": "Rotation, coordinate scaling, and reflection",
    "content": " ",
    "url": "/control_notes/notes/svd.html#rotation-coordinate-scaling-and-reflection",
    
    "relUrl": "/notes/svd.html#rotation-coordinate-scaling-and-reflection"
  },"86": {
    "doc": "SVD",
    "title": "üéØ SVD Geometry Summary",
    "content": "For a real matrix M, the Singular Value Decomposition is: . \\[\\mathbf{M} = \\mathbf{U} \\boldsymbol{\\Sigma} \\mathbf{V}^*\\] üî∑ Square Matrix Case: \\(\\mathbf{M} \\in \\mathbb{R}^{m \\times m}\\) . | U and V* are real orthogonal matrices (rotations/reflections) | Œ£ scales each coordinate by singular values \\(\\sigma_i\\) | Geometrically: rotation/reflection ‚Üí scaling ‚Üí rotation/reflection | . üî∏ Determinant Interpretation . | \\(\\det(\\mathbf{M}) &gt; 0\\): U and \\(V^*\\) are both rotations or both reflections | \\(\\det(\\mathbf{M}) &lt; 0\\): One of U or \\(V^*\\) must involve reflection | \\(\\det(\\mathbf{M}) = 0\\): U and \\(V^*\\) can independently be rotations or reflections | . üî∑ Rectangular Matrix Case: $\\mathbf{M} \\in \\mathbb{R}^{m \\times n}$ . | M maps \\(\\mathbb{R}^n \\to \\mathbb{R}^m\\) | U and V* act on $\\mathbb{R}^m$ and $\\mathbb{R}^n$ respectively | Œ£: . | Scales the first $\\min(m, n)$ coordinates | Extends (pads) or truncates vector dimensions appropriately | . | . This decomposition reveals how any linear transformation can be interpreted geometrically using rotations/reflections and scaling. ",
    "url": "/control_notes/notes/svd.html#-svd-geometry-summary",
    
    "relUrl": "/notes/svd.html#-svd-geometry-summary"
  },"87": {
    "doc": "SVD",
    "title": "SVD",
    "content": "SVD works on any matrix . ",
    "url": "/control_notes/notes/svd.html",
    
    "relUrl": "/notes/svd.html"
  },"88": {
    "doc": "Tips",
    "title": "Stability Tips",
    "content": ". | The Gain and Phase Margins are defined with respect to open-loop transfer function, but the margins are not intrinsic properties of the open-loop system alone, and are only meaningful for the corresponding closed-loop system. | Margins are local properties measured at specific crossover points. It is very possible for a higher-order system to have multiple crossover frequencies and therefore multiple Stability Margins. Conservative Rule the smallest (worst-case) margin dictates stability. | . ",
    "url": "/control_notes/notes/tips.html#stability-tips",
    
    "relUrl": "/notes/tips.html#stability-tips"
  },"89": {
    "doc": "Tips",
    "title": "Controllability and Observability Tips",
    "content": ". | Unstable systems are not always uncontrollable. If unstable modes are controllable, then the system is stabilizable. | Degrees of controllability can be determined from the Controllability Gramian or the SVD of the controllability matrix. | Controllability = Reachability. | Degrees of Observability can be determined from the Observability Gramian or the SVD of the observability matrix. | . ",
    "url": "/control_notes/notes/tips.html#controllability-and-observability-tips",
    
    "relUrl": "/notes/tips.html#controllability-and-observability-tips"
  },"90": {
    "doc": "Tips",
    "title": "Transfer Function and Frequency Analysis tips",
    "content": ". | The peaks at resonance on bode plots are caused by the presence of lightly damped poles. A higher order bode plot can have multiple peaks since the system may have multiple lightly damped poles. | The presence of RHP zeroes make the system non-minimum phase by introducing a non-causal phase lag, which means the transient response w. | Bode plot shows the steady state response only (evaluating at \\(s=j\\omega\\)). Transient response can only be investigated in time-domain since it is a time baseed phenomenon. | Avoid \\(|L(s)| = 0 dB, \\angle L(s) = -180^\\circ, \\text{ where } |L(s)| \\text{ is the open-loop transfer function}\\). This is the boundary of stability. At this point gain = -1 (magnitude = 1, phase = \\(-180^\\circ\\)), which causes denominator of closed loop transfer function to be 0. | Non-miminum phase can be primarily caused by three phenomena: 1. Time delay \\(e^{-sT}\\) 2. RHP zeroes 3. Non-causal/Inverse-unstable Dynamics (Non-causal systems depend on input in the future). Only RHP zeroes can cause step response of the system to go in the wrong direction first. Time delay only causes the step response to shift to the right. | . ",
    "url": "/control_notes/notes/tips.html#transfer-function-and-frequency-analysis-tips",
    
    "relUrl": "/notes/tips.html#transfer-function-and-frequency-analysis-tips"
  },"91": {
    "doc": "Tips",
    "title": "LQG and Extended Kalman Tips",
    "content": ". | An LQG controller does not have any guarantee on robustness. | LQR and LQR solves an Algebraic Riccati Equation to calculate an analytical solution to the problem given Q and R. | If the system is observable, LQE can deduce all states from a few measurable states. Degrees of observability would be helpful when desining an observer. | . ",
    "url": "/control_notes/notes/tips.html#lqg-and-extended-kalman-tips",
    
    "relUrl": "/notes/tips.html#lqg-and-extended-kalman-tips"
  },"92": {
    "doc": "Tips",
    "title": "Sensitivity and Complementary Sensitivity Tips",
    "content": ". | Sensitivity plots also have peaks at resonance frequencies. These peaks occur where the Open Loop Transfer Function \\(L(s)\\) is close to -1 in the complex plane. This often happens near the gain crossover frequency and when there is low damping (phase lag close to \\(-180^\\circ\\)). | | Gain Crossover frequency is defined as the frequency \\(\\omega_{gc}\\) at which $$ | L(j\\omega) | =1$$ | . | | Time delay and Non-minimum phase place a fundamental limit on how small max( | S | ) can be! This is a hard rule that needs to be satisfied. One can shift $$ | omega_{gc}$$ to the left, which means the system can only track lowfrequency references and reject lower frequency disturbances. | . | . Peaks in Sensitivity Plots are directly correlated with Gain and Phase Margins. The smaller the margins, the bigger the peak. ",
    "url": "/control_notes/notes/tips.html#sensitivity-and-complementary-sensitivity-tips",
    
    "relUrl": "/notes/tips.html#sensitivity-and-complementary-sensitivity-tips"
  },"93": {
    "doc": "Tips",
    "title": "Loop shaping Tips",
    "content": ". | Loop shaping is a technique that tries to shape the Open Loop Transfer Function \\(L(s)\\), according to the desired shape - an integrator. The Transfer Function on the bode plot can be shifted left or right by multiplying \\(L(s)\\) with \\(\\omega_{s}\\) to change the gain at low and high frequencies. | . ",
    "url": "/control_notes/notes/tips.html#loop-shaping-tips",
    
    "relUrl": "/notes/tips.html#loop-shaping-tips"
  },"94": {
    "doc": "Tips",
    "title": "Tips",
    "content": " ",
    "url": "/control_notes/notes/tips.html",
    
    "relUrl": "/notes/tips.html"
  },"95": {
    "doc": "Control Tools",
    "title": "Control Using Simulink &amp; Python",
    "content": "Coming soon‚Ä¶ . ",
    "url": "/control_notes/notes/tools.html#control-using-simulink--python",
    
    "relUrl": "/notes/tools.html#control-using-simulink--python"
  },"96": {
    "doc": "Control Tools",
    "title": "Control Tools",
    "content": " ",
    "url": "/control_notes/notes/tools.html",
    
    "relUrl": "/notes/tools.html"
  },"97": {
    "doc": "Control System Design Workflow",
    "title": "Preliminary EOM design",
    "content": "Use Euler-Langragian to derive the EOMs of the system. The calculate the Jacobian at fixed points. ",
    "url": "/control_notes/notes/workflow.html#preliminary-eom-design",
    
    "relUrl": "/notes/workflow.html#preliminary-eom-design"
  },"98": {
    "doc": "Control System Design Workflow",
    "title": "Control System Design Workflow",
    "content": "Coming soon‚Ä¶ . ",
    "url": "/control_notes/notes/workflow.html",
    
    "relUrl": "/notes/workflow.html"
  }
}
